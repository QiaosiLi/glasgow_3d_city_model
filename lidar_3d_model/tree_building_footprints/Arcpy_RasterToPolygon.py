# -*- coding: utf-8 -*-
"""
Generated by ArcGIS ModelBuilder on : 2023-08-17 12:18:20
"""
import os
import glob
import arcpy

def RasterToPolygon(input_folder, grid_name):  # Model

    # To allow overwriting outputs change overwriteOutput option to True.
    arcpy.env.overwriteOutput = True

    raster_file = os.path.join(input_folder, grid_name, grid_name + '_50CM_BH_UniqueValue.tif')
    arcpy.ImportToolbox(r"c:\program files\arcgis\pro\Resources\ArcToolbox\toolboxes\Data Management Tools.tbx")
    raster = arcpy.Raster(raster_file)

    # Process: Raster to Polygon (Raster to Polygon) (conversion)
    polygon_file = os.path.join(input_folder, grid_name, grid_name + '_Building_Polygon.shp')
    with arcpy.EnvManager(outputMFlag="Disabled", outputZFlag="Disabled"):
        arcpy.conversion.RasterToPolygon(in_raster=raster, out_polygon_features=polygon_file, simplify="NO_SIMPLIFY", raster_field="Value", create_multipart_features="SINGLE_OUTER_PART", max_vertices_per_feature=None)

    # Process: Define Projection (Define Projection) (management)
    polygon_projection = arcpy.management.DefineProjection(in_dataset=polygon_file, coor_system="PROJCS[\"British_National_Grid\",GEOGCS[\"GCS_OSGB_1936\",DATUM[\"D_OSGB_1936\",SPHEROID[\"Airy_1830\",6377563.396,299.3249646]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"False_Easting\",400000.0],PARAMETER[\"False_Northing\",-100000.0],PARAMETER[\"Central_Meridian\",-2.0],PARAMETER[\"Scale_Factor\",0.9996012717],PARAMETER[\"Latitude_Of_Origin\",49.0],UNIT[\"Meter\",1.0]]")[0]

    # Process: Add Field (Add Field) (management)
    polygon_projection = arcpy.management.AddField(in_table=polygon_projection, field_name="Area", field_type="FLOAT", field_precision=None, field_scale=None, field_length=None, field_alias="", field_is_nullable="NULLABLE", field_is_required="NON_REQUIRED", field_domain="")[0]

    # Process: Calculate Geometry Attributes (Calculate Geometry Attributes) (management)
    polygon_projection = arcpy.management.CalculateGeometryAttributes(in_features=polygon_projection, geometry_property=[["Area", "AREA"]], length_unit="", area_unit="SQUARE_METERS", coordinate_system="PROJCS[\"British_National_Grid\",GEOGCS[\"GCS_OSGB_1936\",DATUM[\"D_OSGB_1936\",SPHEROID[\"Airy_1830\",6377563.396,299.3249646]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"False_Easting\",400000.0],PARAMETER[\"False_Northing\",-100000.0],PARAMETER[\"Central_Meridian\",-2.0],PARAMETER[\"Scale_Factor\",0.9996012717],PARAMETER[\"Latitude_Of_Origin\",49.0],UNIT[\"Meter\",1.0]]", coordinate_format="SAME_AS_INPUT")[0]

    # Process: Export Features (2) (Export Features) (conversion)
    polygon_are_file = os.path.join(input_folder, grid_name, grid_name + '_Building_Polygon_Area.shp')
    arcpy.conversion.ExportFeatures(in_features=polygon_projection, out_features=polygon_are_file, where_clause="", use_field_alias_as_name="NOT_USE_ALIAS", field_mapping="Id \"Id\" true true false 4 Long 0 0,First,#,E:\\QL_2022\\LiDAR_2023\\Results\\Buildings\\Buildings.gdb\\RasterT_NS45NE_1,Id,-1,-1;gridcode \"gridcode\" true true false 4 Long 0 0,First,#,E:\\QL_2022\\LiDAR_2023\\Results\\Buildings\\Buildings.gdb\\RasterT_NS45NE_1,gridcode,-1,-1;Shape_Length \"Shape_Length\" false true true 8 Double 0 0,First,#,E:\\QL_2022\\LiDAR_2023\\Results\\Buildings\\Buildings.gdb\\RasterT_NS45NE_1,Shape_Length,-1,-1;Shape_Area \"Shape_Area\" false true true 8 Double 0 0,First,#,E:\\QL_2022\\LiDAR_2023\\Results\\Buildings\\Buildings.gdb\\RasterT_NS45NE_1,Shape_Area,-1,-1;Area \"Area\" true true false 4 Float 0 0,First,#,E:\\QL_2022\\LiDAR_2023\\Results\\Buildings\\Buildings.gdb\\RasterT_NS45NE_1,Area,-1,-1", sort_field=[])

    # Process: Export Features (Export Features) (conversion)
    polygon_greater20_file = os.path.join(input_folder, grid_name, grid_name + '_Building_Polygon_Greater20.shp')
    arcpy.conversion.ExportFeatures(in_features=polygon_projection, out_features=polygon_greater20_file, where_clause="Area >= 20", use_field_alias_as_name="NOT_USE_ALIAS", field_mapping="Id \"Id\" true true false 4 Long 0 0,First,#,E:\\QL_2022\\LiDAR_2023\\Results\\Buildings\\Buildings.gdb\\RasterT_NS45NE_1,Id,-1,-1;gridcode \"gridcode\" true true false 4 Long 0 0,First,#,E:\\QL_2022\\LiDAR_2023\\Results\\Buildings\\Buildings.gdb\\RasterT_NS45NE_1,gridcode,-1,-1;Shape_Length \"Shape_Length\" false true true 8 Double 0 0,First,#,E:\\QL_2022\\LiDAR_2023\\Results\\Buildings\\Buildings.gdb\\RasterT_NS45NE_1,Shape_Length,-1,-1;Shape_Area \"Shape_Area\" false true true 8 Double 0 0,First,#,E:\\QL_2022\\LiDAR_2023\\Results\\Buildings\\Buildings.gdb\\RasterT_NS45NE_1,Shape_Area,-1,-1;Area \"Area\" true true false 4 Float 0 0,First,#,E:\\QL_2022\\LiDAR_2023\\Results\\Buildings\\Buildings.gdb\\RasterT_NS45NE_1,Area,-1,-1", sort_field=[])

    # Process: Eliminate Polygon Part (Eliminate Polygon Part) (management)
    polygon_greater20_fillholes10_file = os.path.join(input_folder, grid_name, grid_name + '_Building_Polygon_Greater20_FillHoles10.shp')
    arcpy.management.EliminatePolygonPart(in_features=polygon_greater20_file, out_feature_class=polygon_greater20_fillholes10_file, condition="AREA", part_area="10 SquareMeters", part_area_percent=0, part_option="CONTAINED_ONLY")

if __name__ == '__main__':

    grid_folder = 'data\Building_Footprints'  # The folder contains all building rasters in 5km tile.
    grid_list = glob.glob(os.path.join(grid_folder, '*', ''))

    for grid in grid_list:
        grid_name = grid.split('\\')[-2]
        print(grid_name)
        RasterToPolygon(grid_folder, grid_name)
